name: PR Checks

# Run the CI if branches are pushed locally, allowing us to
# run CI without the need of creating a pull request.
#
# Run the CI on pull requests only if they are from forked
# repositories.
#
on:
  push:
    branches-ignore:
    - gh-pages
    - master
  pull_request:
    types: [assigned, opened, synchronize, reopened]
    branches:
      # Branches from forks have the form 'user:branch-name' so we only run
      # this job on pull_request events for branches that look like fork
      # branches. Without this we would end up running this job twice for non
      # forked PRs, once for the push and then once for opening the PR.
    - '**:**'


# Left to-do:
# - coverage
# - publishing docs to gh-pages
# - persistent artifact cache
# - overnight jobs
# - wsl tasks (TODO: Check if GitHub's Windows runners allow WSL)
#
# New opportunities:
# - run tests on mac (GitHub provides MacOS runners)
# - standardize WSL tasks by using GitHub-provided runners

env:
  CI_IMAGE_VERSION: master-241289109

jobs:
  docs:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        # BuildStream requires tags to be able to find its version.
        with:
          fetch-depth: 0

      - name: Give `testuser` ownership of the source directory
        run: sudo chown -R 1000:1000 ${GITHUB_WORKSPACE}

      - name: Build documentation using Docker Compose
        run: |
          docker-compose \
            --file ${GITHUB_WORKSPACE}/.github/compose/ci.docker-compose.yml \
            run \
            docs

          # Restore permissions to the current user
          sudo chown -R ${USER} ${GITHUB_WORKSPACE}

          # Include a tarball in the published docs, allowing for
          # easy re-publishing of master docs on docs.buildstream.build
          tar -C doc/build/html -zcf docs.tgz .

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: docs
          path: doc/build/html
